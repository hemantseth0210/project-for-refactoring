apiVersion: "rbac.istio.io/v1alpha1"
kind: ServiceRole
metadata:
  name: customer-viewer
  namespace: default
spec:
  rules:
  - services: ["customer.default.svc.cluster.local"]
    methods: ["GET", "HEAD"]
---
apiVersion: "rbac.istio.io/v1alpha1"
kind: ServiceRole
metadata:
  name: account-viewer
  namespace: default
spec:
  rules:
  - services: ["account.default.svc.cluster.local"]
    methods: ["GET", "HEAD"]
---
apiVersion: "rbac.istio.io/v1alpha1"
kind: ServiceRoleBinding
metadata:
  name: istio-ingress-binding
  namespace: default
spec:
  subjects:
  - properties:
      source.namespace: "istio-system"
  roleRef:
    kind: ServiceRole
    name: "customer-viewer"
---
apiVersion: "rbac.istio.io/v1alpha1"
kind: ServiceRoleBinding
metadata:
  name: customer-user-binding
  namespace: default
spec:
  subjects:
  - user: "cluster.local/ns/default/sa/customer"
  roleRef:
    kind: ServiceRole
    name: "account-viewer"
---
### 
### Kubernetes Service accounts
###
apiVersion: v1
kind: ServiceAccount
metadata:
  name: customer
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: account
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: customer
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: customer
        version: v1
    spec:
      serviceAccountName: customer  # service account
      containers:
      - name: customer
        image: hemantseth0210/customer:0.0.9
        ports:
        - containerPort: 3080
---
apiVersion: v1
kind: Service
metadata:
  name: customer
  labels:
    app: customer
spec:
  selector:
    app: customer
  ports:
  - name: http
    port: 3080
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: account
spec:
  replicas: 1
  template:
    metadata:
      labels:
        app: account
        version: v1
    spec:
      serviceAccountName: account  # service account
      containers:
      - name: account
        image: hemantseth0210/account:0.0.7
        ports:
        - containerPort: 4080
---
apiVersion: v1
kind: Service
metadata:
  name: account
  labels:
    app: account
spec:
  selector:
    app: account
  ports:
  - name: http
    port: 4080
---
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: cust-acct-gateway
spec:
  selector:
    istio: ingressgateway # use istio default controller
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "*"
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: cust-acct-vs
spec:
  hosts:
  - "*"
  gateways:
  - cust-acct-gateway
  http:
  - route:
    - destination:
        host: customer.default.svc.cluster.local
        subset: v1
        port:
          number: 3080
---
apiVersion: networking.istio.io/v1alpha3
kind: DestinationRule
metadata:
  name: cust-acct-dr
spec:
  host: customer.default.svc.cluster.local
  # uncomment to enable mutual TLS
  trafficPolicy:
    tls:
      mode: ISTIO_MUTUAL
  subsets:
  - name: v1
    labels:
      version: v1